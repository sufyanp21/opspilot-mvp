[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "derivaclear"
version = "0.1.0"
description = "AI-powered RegTech platform for derivatives post-trade automation"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "DerivaClear Team", email = "dev@derivaclear.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.11"
dependencies = [
    "fastapi==0.111.0",
    "uvicorn[standard]==0.30.1",
    "pydantic==2.7.4",
    "pydantic-settings==2.3.4",
    "pandas==2.2.2",
    "python-multipart==0.0.9",
    "jinja2==3.1.4",
    "reportlab==4.2.0",
    "httpx==0.27.0",
    "orjson==3.10.3",
    "pytest==8.2.2",
    "typing-extensions==4.12.2",
    "scikit-learn==1.5.1",
    "numpy==1.26.4",
    "prometheus-client==0.20.0",
    "SQLAlchemy==2.0.31",
    "alembic==1.13.2",
    "psycopg2-binary==2.9.9",
    "redis==5.0.7",
    "celery==5.4.0",
    "opentelemetry-api==1.26.0",
    "opentelemetry-sdk==1.26.0",
    "opentelemetry-instrumentation-fastapi==0.47b0",
    "hdbscan==0.8.37",
    "PyJWT==2.8.0",
    "PyYAML==6.0.2",
]

[project.optional-dependencies]
dev = [
    "black>=23.11.0",
    "ruff>=0.5.0",
    "isort>=5.12.0",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "bandit>=1.7.5",
    "safety>=2.3.5",
]

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py311"
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = true
follow_imports = "silent"
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_unimported = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --strict-markers --strict-config --disable-warnings"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
