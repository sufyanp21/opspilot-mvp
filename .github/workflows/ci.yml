name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop, demo-hotfix/20250816-warroom ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Backend Tests
  backend-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        cd backend
        pip install -r requirements.txt
        pip install -r requirements-dev.txt --upgrade-strategy eager
    
    - name: Run linting
      run: |
        cd backend
        flake8 app/ tests/ --max-line-length=100 --extend-ignore=E203,W503 || true
        black --check app/ tests/ || true
        isort --check-only app/ tests/ || true
    
    - name: Run type checking
      run: |
        cd backend
        mypy app/ --ignore-missing-imports || true
    
    - name: Run tests
      run: |
        cd backend
        export DATABASE_URL="sqlite:///./test.db"
        export ENVIRONMENT="test"
        pytest tests/ --cov=app --cov-report=xml -v --tb=short || true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: matrix.python-version == '3.11'
      with:
        file: ./backend/coverage.xml
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true

  # Frontend Tests
  frontend-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: apps/web/package-lock.json
    
    - name: Install dependencies
      run: |
        cd apps/web
        npm ci
    
    - name: Run linting
      run: |
        cd apps/web
        npm run lint || true
    
    - name: Run type checking
      run: |
        cd apps/web
        npx tsc --noEmit || true
    
    - name: Build application
      run: |
        cd apps/web
        npm run build

  # Security Scan
  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        cd backend
        pip install -r requirements.txt
        pip install safety>=2.0.0 bandit[toml]>=1.7.0 --no-deps
    
    - name: Run security checks
      run: |
        cd backend
        safety check --file requirements.txt || true
        bandit -r app/ -f json -o bandit-report.json || true
    
    - name: Upload security report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: backend/bandit-report.json
      continue-on-error: true

  # Build (only for main branch)
  build:
    needs: [backend-test, frontend-test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Build Backend
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install build
        python -m build || true
    
    - name: Build Frontend
      run: |
        cd apps/web
        npm ci
        npm run build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: |
          backend/dist/
          apps/web/dist/
      continue-on-error: true
